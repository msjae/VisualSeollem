name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Configuring and building libglew-dev, libuvc
      run: |
       sudo apt-get install libusb-1.0-0-dev
       git clone http://github.com/ktossell/libuvc
       cd libuvc
       mkdir build
       cd build
       cmake .. -DCMAKE_BUILD_TYPE=Release
       make && sudo make install
       

    - name: Configuring and building Thirdparty/opencv
      run: |
        sudo apt install build-essential cmake git pkg-config libgtk-3-dev \
        libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
        libxvidcore-dev libx264-dev libjpeg-dev libpng-dev libtiff-dev \
        gfortran openexr libatlas-base-dev python3-dev python3-numpy \
        libtbb2 libtbb-dev libdc1394-22-dev
        cd ${{ github.workspace }}/Thirdparty/opencv
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release \
        -D CMAKE_INSTALL_PREFIX=/usr/local \
        -D INSTALL_C_EXAMPLES=ON \
        -D INSTALL_PYTHON_EXAMPLES=ON \
        -D OPENCV_GENERATE_PKGCONFIG=ON \
        -D OPENCV_EXTRA_MODULES_PATH=~/opencv_build/opencv_contrib/modules \
        -D WITH_OPENGL=ON \
        -D WITH_GRK=ON \
        -D BUILD_EXAMPLES=ON ..
        make -j$nproc
        sudo make install
    - name: Configuring and building Thirdparty/Pangolin
      run: |
        sudo apt-get install libeigen3-dev
        cd ${{ github.workspace }}/Thirdparty/Pangolin
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make -j$nproc
        sudo make install


    - name: Configuring and building Thirdparty/easy_profiler
      run: |
        cd ${{ github.workspace }}/Thirdparty/easy_profiler
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make -j$nproc
        sudo make install


    - name: Configuring and building Thirdparty/DBoW2
      run: |
        cd ${{ github.workspace }}/Thirdparty/DBoW2
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make -j

    - name: Configuring and building Thirdparty/g2o
      run: |
        cd ${{ github.workspace }}/Thirdparty/g2o
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make -j$nproc
        
        
    - name: Uncompress vocabulary
      run: |
        cd ${{ github.workspace }}
        cd Vocabulary
        tar -xf ORBvoc.txt.tar.gz


    - name: Configuring and building ORB_SLAM2
      run: |
        cd ${{ github.workspace }}
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make -j$nproc
