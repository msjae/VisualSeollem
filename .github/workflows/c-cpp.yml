name: CI

on:
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: Dovyski/setup-opencv-action@v1
      with:
        opencv-version: '4.0.0'
        INSTALL_C_EXAMPLES: ON
        INSTALL_PYTHON_EXAMPLES: ON
        WITH_OPENGL: ON
        WITH_GRK: ON
        GENERATE_PKGCONFIG: ON
        BUILD_EXAMPLES: ON
    
    - name: Configuring and building libglew-dev, libuvc
      run: |
       sudo apt-get install libusb-1.0-0-dev
       git clone http://github.com/ktossell/libuvc
       cd libuvc
       mkdir build
       cd build
       cmake .. -DCMAKE_BUILD_TYPE=Release
       make && sudo make install
       

    - name: Configuring and building Thirdparty/opencv
      run: |
        sudo apt install -y build-essential cmake
        sudo apt install -y pkg-config
        sudo apt install -y ffmpeg libavcodec-dev libavformat-dev libswscale-dev libxvidcore-dev libx264-dev libxine2-dev
        sudo apt install -y libv4l-dev v4l-utils
        sudo apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
        sudo apt install libgtk-3-dev
        sudo apt install -y mesa-utils libgl1-mesa-dri libgtkgl2.0-dev libgtkglext1-dev
        sudo apt install -y libatlas-base-dev gfortran libeigen3-dev
        sudo apt install -y python3-dev python3-numpy
        sudo apt install libglew-dev
        sudo apt install git \
        libxvidcore-dev libx264-dev libjpeg-dev libpng-dev libtiff-dev \
        openexr   \
        libtbb2 libtbb-dev libdc1394-22-dev

    - name: Configuring and building Thirdparty/Pangolin-0.5
      run: |
        sudo apt-get install libeigen3-dev
        cd ${{ github.workspace }}/Thirdparty/Pangolin-0.5
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make -j$nproc
        sudo make install


    - name: Configuring and building Thirdparty/easy_profiler
      run: |
        cd ${{ github.workspace }}/Thirdparty/easy_profiler
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make -j$nproc
        sudo make install


    - name: Configuring and building Thirdparty/DBoW2
      run: |
        cd ${{ github.workspace }}/Thirdparty/DBoW2
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make -j

    - name: Configuring and building Thirdparty/g2o
      run: |
        cd ${{ github.workspace }}/Thirdparty/g2o
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make -j$nproc
        
        
    - name: Uncompress vocabulary
      run: |
        cd ${{ github.workspace }}
        cd Vocabulary
        tar -xf ORBvoc.txt.tar.gz


    - name: Configuring and building ORB_SLAM2
      run: |
        cd ${{ github.workspace }}
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make -j$nproc
